


#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
using namespace std;
int hash[10001];
int chash[10001];
int r[11][10001];
int num[100];
int basev[10];
int val[512] = {0, 2 , 3,3,2,2,3,3,5,5,23,23,5,5,23,23,6,6,79,79,6,6,79,79,49,49,79,79,49,49,79,79,7,7,\
143,143,7,7,143,143,7,7,143,143,7,7,143,143,49,49,2207,2207,49,49,2207,2207,49,4\
9,2207,2207,49,49,2207,2207,8,8,27,27,8,8,27,27,27,27,27,27,27,27,27,27,216,216,\
3879,3879,216,216,3879,3879,1975,1975,3879,3879,1975,1975,3879,3879,1001,1001,57\
19,5719,1001,1001,5719,5719,1001,1001,5719,5719,1001,1001,5719,5719,47089,47089,\
47089,47089,47089,47089,47089,47089,48769,48769,58775,58775,48769,48769,58775,58\
775,3,3,3,3,3,3,3,3,27,27,27,27,27,27,27,27,415,415,707,707,415,415,707,707,415,\
415,1695,1695,415,415,1695,1695,125,125,143,143,125,125,143,143,125,125,143,143,\
125,125,143,143,2753,2753,37131,37131,2753,2753,37131,37131,37131,37131,37131,37\
131,37131,37131,37131,37131,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,4977\
,4977,10089,10089,4977,4977,10089,10089,4977,4977,23117,23117,4977,4977,23117,23\
117,6393,6393,35785,35785,6393,6393,35785,35785,6393,6393,128821,128821,6393,639\
3,128821,128821,569669,569669,569669,569669,569669,569669,569669,569669,569669,5\
69669,569669,569669,569669,569669,569669,569669,7,7,13,13,7,7,13,13,7,7,23,23,7,\
7,23,23,44,44,79,79,44,44,79,79,49,49,79,79,49,49,79,79,7,7,167,167,7,7,167,167,\
7,7,7895,7895,7,7,7895,7895,49,49,6307,6307,49,49,6307,6307,49,49,7895,7895,49,4\
9,7895,7895,97,97,219,219,97,97,219,219,219,219,219,219,219,219,219,219,608,608,
3879,3879,608,608,3879,3879,3879,3879,3879,3879,3879,3879,3879,3879,34527,34527,
48041,48041,34527,34527,48041,48041,34527,34527,120407,120407,34527,34527,120407\
,120407,245035,245035,697563,697563,245035,245035,697563,697563,245035,245035,26\
88153,2688153,245035,245035,2688153,2688153,91,91,91,91,91,91,91,91,91,91,91,91,
91,91,91,91,1033,1033,6073,6073,1033,1033,6073,6073,4577,4577,6073,6073,4577,457\
7,6073,6073,1337,1337,1337,1337,1337,1337,1337,1337,29913,29913,120149,120149,29\
913,29913,120149,120149,71735,71735,613479,613479,71735,71735,613479,613479,2183\
01,218301,711725,711725,218301,218301,711725,711725,1177,1177,1177,1177,1177,117\
7,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,9867,9867,28099,28099,9867,9\
867,28099,28099,28099,28099,28099,28099,28099,28099,28099,28099,48041,48041,4804\
1,48041,48041,48041,48041,48041,246297,246297,346719,346719,246297,246297,346719\
,346719,2662657,2662657,4817803,4817803,2662657,2662657,4817803,4817803,11814485\
,11814485,11814485,11814485,11814485,11814485,11814485,11814485};
bool dfs(int value, int base)
{
	if(hash[value])
		return true;
	int tmp = value;
	int cnt = 0;
	int nexttmp = 0;
	while(1)
	{
		num[cnt++] = tmp % base;
		nexttmp += (num[cnt-1] * num[cnt-1]);
		tmp /= base;
		if (tmp == 0 )
			break;
	}
	if( !chash[nexttmp] )
	{
		chash[nexttmp] = 1;
		hash[value] = dfs(nexttmp, base);
		return hash[value];
	}
	else 
	{
		return false;
	}
}
char str[100];
int main()
{
		freopen("A-large.in","r", stdin);
		freopen("out.txt","w", stdout);
	int i, j;
	memset(r, 0, sizeof(r));
	for(i = 2; i <= 10; i ++)
	{
		memset(hash, 0, sizeof(hash));
		hash[1] = 1;
		int cnt = 0, tmp;
		for(j = 2;  j <= 10000;  j ++)
		{
			memset(chash, 0, sizeof(chash));
			chash[j] = 1;
			if(dfs(j, i))
			{
				r[i][j] = 1;
			}
		}
	}
	int t;
	scanf("%d", &t);
	getchar();
	char tmp[2];
	int caseno = 0;
	for(i = 2;  i <= 10; i ++)
		r[i][1] = 1;

	while(t--)
	{
		int basenum = 0;
		
		gets(str);
		int has[11];
		memset(has, 0,sizeof(has));
		for(i = 0; str[i] != '\0'; i ++)
		{
			if(str[i] == ' ')
				continue;
			if( str[i]  != ' ' && (str[i + 1] == ' ' || str[i+1] == '\0') )
			{
				basev[basenum++] = str[i] - '0';
				has[basev[basenum-1]] = 1;
			}
			else 
			{
				basev[basenum++] = 10;
				has[basev[basenum-1]] = 1;
				i ++ ;
			}
		}
	    int tmp = 0;
		for(i = 2; i <= 10; i ++ )
		{
			if(has[i])
				tmp = tmp + (1 << (i - 2));
		}
		printf("Case #%d: %d\n",++caseno, val[tmp]); 
		
	}
	
}