#include <vector>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cassert>
#include <string>
#include <cstdio>
#include <cmath>
#include <stack>
#define sz(x) ((int)(x.size()))
#define all(c) (c).begin(),(c).end() 
#define pb push_back 
#define mp make_pair
#define foreach(T, x, it) for (T::iterator it = x.begin(); it != x.end(); ++it)
using namespace std;
typedef long long lint;
typedef pair<int, int> pii;
typedef vector<short> vi;

int Get(int x, int b) {
	assert(x > 1);
	int r = 0;
	while (x) {
		int t = x % b;
		r += t * t;
		x /= b;
	}
	assert(r > 0);
	return r;
}

const int MAX = 1 << 24;
int Was[MAX];
int Cur;
vector<vi> Next;

void Init() {
	return;
	Next.assign(MAX, vi(9, 0));
	for (int i = 2; i < MAX; ++i) {
		for (int j = 0; j < 9; ++j) {
			Next[i][j] = Get(i, j + 2);
		}
	}
}

bool IsHappy(int x, int b) {
//	set<int> was;
	++Cur;
	while (x != 1) {
	//	cout << x << endl;
		if (Was[x] == Cur) return false;
		Was[x] = Cur;
		//if (was.count(x)) return false;		
		//was.insert(x);		
		x = Get(x, b);		
		//x = Next[x][b - 2];
	}
	return true;
}

int Precalc() {
	Init();
	int nb = 9;
	for (int use = 1; use < 1 << nb; ++use) {
		bool fnd = false;
		for (int i = 2; i < MAX; ++i) {
			bool ok = true;
			for (int j = 0; ok && j < nb; ++j) {
				if ((use >> j) & 1) {
					//cout << IsHappy(4, 10) << endl;
					ok &= IsHappy(i, j + 2);
				}
			}
			if (ok) {
				printf("%d,", i);
				fnd = true;
				break;
			}
		}
		if (!fnd) {
			puts("!fnd");
			printf("%d\n", use);
			return 0;
		}
	}

}

int X[1 << 9] = {0, 2,3,3,2,2,3,3,5,5,23,23,5,5,23,23,6,6,79,79,6,6,79,79,49,49,79,79,49,49,79,79,7,7,143,143,7,7,143,143,7,7,143,143,7,7,143,143,49,49,2207,2207,49,49,2207,2207,49,49,2207,2207,49,49,2207,2207,8,8,27,27,8,8,27,27,27,27,27,27,27,27,27,27,216,216,3879,3879,216,216,3879,3879,1975,1975,3879,3879,1975,1975,3879,3879,1001,1001,5719,5719,1001,1001,5719,5719,1001,1001,5719,5719,1001,1001,5719,5719,47089,47089,47089,47089,47089,47089,47089,47089,48769,48769,58775,58775,48769,48769,58775,58775,3,3,3,3,3,3,3,3,27,27,27,27,27,27,27,27,415,415,707,707,415,415,707,707,415,415,1695,1695,415,415,1695,1695,125,125,143,143,125,125,143,143,125,125,143,143,125,125,143,143,2753,2753,37131,37131,2753,2753,37131,37131,37131,37131,37131,37131,37131,37131,37131,37131,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,4977,4977,10089,10089,4977,4977,10089,10089,4977,4977,23117,23117,4977,4977,23117,23117,6393,6393,35785,35785,6393,6393,35785,35785,6393,6393,128821,128821,6393,6393,128821,128821,569669,569669,569669,569669,569669,569669,569669,569669,569669,569669,569669,569669,569669,569669,569669,569669,7,7,13,13,7,7,13,13,7,7,23,23,7,7,23,23,44,44,79,79,44,44,79,79,49,49,79,79,49,49,79,79,7,7,167,167,7,7,167,167,7,7,7895,7895,7,7,7895,7895,49,49,6307,6307,49,49,6307,6307,49,49,7895,7895,49,49,7895,7895,97,97,219,219,97,97,219,219,219,219,219,219,219,219,219,219,608,608,3879,3879,608,608,3879,3879,3879,3879,3879,3879,3879,3879,3879,3879,34527,34527,48041,48041,34527,34527,48041,48041,34527,34527,120407,120407,34527,34527,120407,120407,245035,245035,697563,697563,245035,245035,697563,697563,245035,245035,2688153,2688153,245035,245035,2688153,2688153,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,1033,1033,6073,6073,1033,1033,6073,6073,4577,4577,6073,6073,4577,4577,6073,6073,1337,1337,1337,1337,1337,1337,1337,1337,29913,29913,120149,120149,29913,29913,120149,120149,71735,71735,613479,613479,71735,71735,613479,613479,218301,218301,711725,711725,218301,218301,711725,711725,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,1177,9867,9867,28099,28099,9867,9867,28099,28099,28099,28099,28099,28099,28099,28099,28099,28099,48041,48041,48041,48041,48041,48041,48041,48041,246297,246297,346719,346719,246297,246297,346719,346719,2662657,2662657,4817803,4817803,2662657,2662657,4817803,4817803,11814485,11814485,11814485,11814485,11814485,11814485,11814485,11814485};
char buf[1 << 20];

int main() {	
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
//	Precalc();

	
	int tst;
	cin >> tst;
	
	for (int i = 1; i <= tst; ++i) {
		
		do {
			gets(buf);
		} while (!buf[0]);
		string str(buf);
		istringstream sin(str);
		int use = 0;
		int x;
		while (sin >> x) {
			use |= 1 << (x - 2);
		}
		int ans = X[use];

		
		printf("Case #%d: %d\n", i, ans);
	}
	return 0;
}

