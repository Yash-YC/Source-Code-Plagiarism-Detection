import java.io.File;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class MultiBaseHappiness {

	private final static String FILE_IN = "base.in";
	private final static String FILE_OUT = "base.out";

	private void solve() throws Exception {

		HashMap<Integer, Integer> res = new HashMap<Integer, Integer>();
		res.put(1, 2);
		res.put(2, 3);
		res.put(3, 3);
		res.put(4, 2);
		res.put(5, 2);
		res.put(6, 3);
		res.put(7, 3);
		res.put(8, 5);
		res.put(9, 5);
		res.put(10, 23);
		res.put(11, 23);
		res.put(12, 5);
		res.put(13, 5);
		res.put(14, 23);
		res.put(15, 23);
		res.put(16, 6);
		res.put(17, 6);
		res.put(18, 79);
		res.put(19, 79);
		res.put(20, 6);
		res.put(21, 6);
		res.put(22, 79);
		res.put(23, 79);
		res.put(24, 49);
		res.put(25, 49);
		res.put(26, 79);
		res.put(27, 79);
		res.put(28, 49);
		res.put(29, 49);
		res.put(30, 79);
		res.put(31, 79);
		res.put(32, 7);
		res.put(33, 7);
		res.put(34, 143);
		res.put(35, 143);
		res.put(36, 7);
		res.put(37, 7);
		res.put(38, 143);
		res.put(39, 143);
		res.put(40, 7);
		res.put(41, 7);
		res.put(42, 143);
		res.put(43, 143);
		res.put(44, 7);
		res.put(45, 7);
		res.put(46, 143);
		res.put(47, 143);
		res.put(48, 49);
		res.put(49, 49);
		res.put(50, 2207);
		res.put(51, 2207);
		res.put(52, 49);
		res.put(53, 49);
		res.put(54, 2207);
		res.put(55, 2207);
		res.put(56, 49);
		res.put(57, 49);
		res.put(58, 2207);
		res.put(59, 2207);
		res.put(60, 49);
		res.put(61, 49);
		res.put(62, 2207);
		res.put(63, 2207);
		res.put(64, 8);
		res.put(65, 8);
		res.put(66, 27);
		res.put(67, 27);
		res.put(68, 8);
		res.put(69, 8);
		res.put(70, 27);
		res.put(71, 27);
		res.put(72, 27);
		res.put(73, 27);
		res.put(74, 27);
		res.put(75, 27);
		res.put(76, 27);
		res.put(77, 27);
		res.put(78, 27);
		res.put(79, 27);
		res.put(80, 216);
		res.put(81, 216);
		res.put(82, 3879);
		res.put(83, 3879);
		res.put(84, 216);
		res.put(85, 216);
		res.put(86, 3879);
		res.put(87, 3879);
		res.put(88, 1975);
		res.put(89, 1975);
		res.put(90, 3879);
		res.put(91, 3879);
		res.put(92, 1975);
		res.put(93, 1975);
		res.put(94, 3879);
		res.put(95, 3879);
		res.put(96, 1001);
		res.put(97, 1001);
		res.put(98, 5719);
		res.put(99, 5719);
		res.put(100, 1001);
		res.put(101, 1001);
		res.put(102, 5719);
		res.put(103, 5719);
		res.put(104, 1001);
		res.put(105, 1001);
		res.put(106, 5719);
		res.put(107, 5719);
		res.put(108, 1001);
		res.put(109, 1001);
		res.put(110, 5719);
		res.put(111, 5719);
		res.put(112, 47089);
		res.put(113, 47089);
		res.put(114, 47089);
		res.put(115, 47089);
		res.put(116, 47089);
		res.put(117, 47089);
		res.put(118, 47089);
		res.put(119, 47089);
		res.put(120, 48769);
		res.put(121, 48769);
		res.put(122, 58775);
		res.put(123, 58775);
		res.put(124, 48769);
		res.put(125, 48769);
		res.put(126, 58775);
		res.put(127, 58775);
		res.put(128, 3);
		res.put(129, 3);
		res.put(130, 3);
		res.put(131, 3);
		res.put(132, 3);
		res.put(133, 3);
		res.put(134, 3);
		res.put(135, 3);
		res.put(136, 27);
		res.put(137, 27);
		res.put(138, 27);
		res.put(139, 27);
		res.put(140, 27);
		res.put(141, 27);
		res.put(142, 27);
		res.put(143, 27);
		res.put(144, 415);
		res.put(145, 415);
		res.put(146, 707);
		res.put(147, 707);
		res.put(148, 415);
		res.put(149, 415);
		res.put(150, 707);
		res.put(151, 707);
		res.put(152, 415);
		res.put(153, 415);
		res.put(154, 1695);
		res.put(155, 1695);
		res.put(156, 415);
		res.put(157, 415);
		res.put(158, 1695);
		res.put(159, 1695);
		res.put(160, 125);
		res.put(161, 125);
		res.put(162, 143);
		res.put(163, 143);
		res.put(164, 125);
		res.put(165, 125);
		res.put(166, 143);
		res.put(167, 143);
		res.put(168, 125);
		res.put(169, 125);
		res.put(170, 143);
		res.put(171, 143);
		res.put(172, 125);
		res.put(173, 125);
		res.put(174, 143);
		res.put(175, 143);
		res.put(176, 2753);
		res.put(177, 2753);
		res.put(178, 37131);
		res.put(179, 37131);
		res.put(180, 2753);
		res.put(181, 2753);
		res.put(182, 37131);
		res.put(183, 37131);
		res.put(184, 37131);
		res.put(185, 37131);
		res.put(186, 37131);
		res.put(187, 37131);
		res.put(188, 37131);
		res.put(189, 37131);
		res.put(190, 37131);
		res.put(191, 37131);
		res.put(192, 27);
		res.put(193, 27);
		res.put(194, 27);
		res.put(195, 27);
		res.put(196, 27);
		res.put(197, 27);
		res.put(198, 27);
		res.put(199, 27);
		res.put(200, 27);
		res.put(201, 27);
		res.put(202, 27);
		res.put(203, 27);
		res.put(204, 27);
		res.put(205, 27);
		res.put(206, 27);
		res.put(207, 27);
		res.put(208, 4977);
		res.put(209, 4977);
		res.put(210, 10089);
		res.put(211, 10089);
		res.put(212, 4977);
		res.put(213, 4977);
		res.put(214, 10089);
		res.put(215, 10089);
		res.put(216, 4977);
		res.put(217, 4977);
		res.put(218, 23117);
		res.put(219, 23117);
		res.put(220, 4977);
		res.put(221, 4977);
		res.put(222, 23117);
		res.put(223, 23117);
		res.put(224, 6393);
		res.put(225, 6393);
		res.put(226, 35785);
		res.put(227, 35785);
		res.put(228, 6393);
		res.put(229, 6393);
		res.put(230, 35785);
		res.put(231, 35785);
		res.put(232, 6393);
		res.put(233, 6393);
		res.put(234, 128821);
		res.put(235, 128821);
		res.put(236, 6393);
		res.put(237, 6393);
		res.put(238, 128821);
		res.put(239, 128821);
		res.put(240, 569669);
		res.put(241, 569669);
		res.put(242, 569669);
		res.put(243, 569669);
		res.put(244, 569669);
		res.put(245, 569669);
		res.put(246, 569669);
		res.put(247, 569669);
		res.put(248, 569669);
		res.put(249, 569669);
		res.put(250, 569669);
		res.put(251, 569669);
		res.put(252, 569669);
		res.put(253, 569669);
		res.put(254, 569669);
		res.put(255, 569669);
		res.put(256, 7);
		res.put(257, 7);
		res.put(258, 13);
		res.put(259, 13);
		res.put(260, 7);
		res.put(261, 7);
		res.put(262, 13);
		res.put(263, 13);
		res.put(264, 7);
		res.put(265, 7);
		res.put(266, 23);
		res.put(267, 23);
		res.put(268, 7);
		res.put(269, 7);
		res.put(270, 23);
		res.put(271, 23);
		res.put(272, 44);
		res.put(273, 44);
		res.put(274, 79);
		res.put(275, 79);
		res.put(276, 44);
		res.put(277, 44);
		res.put(278, 79);
		res.put(279, 79);
		res.put(280, 49);
		res.put(281, 49);
		res.put(282, 79);
		res.put(283, 79);
		res.put(284, 49);
		res.put(285, 49);
		res.put(286, 79);
		res.put(287, 79);
		res.put(288, 7);
		res.put(289, 7);
		res.put(290, 167);
		res.put(291, 167);
		res.put(292, 7);
		res.put(293, 7);
		res.put(294, 167);
		res.put(295, 167);
		res.put(296, 7);
		res.put(297, 7);
		res.put(298, 7895);
		res.put(299, 7895);
		res.put(300, 7);
		res.put(301, 7);
		res.put(302, 7895);
		res.put(303, 7895);
		res.put(304, 49);
		res.put(305, 49);
		res.put(306, 6307);
		res.put(307, 6307);
		res.put(308, 49);
		res.put(309, 49);
		res.put(310, 6307);
		res.put(311, 6307);
		res.put(312, 49);
		res.put(313, 49);
		res.put(314, 7895);
		res.put(315, 7895);
		res.put(316, 49);
		res.put(317, 49);
		res.put(318, 7895);
		res.put(319, 7895);
		res.put(320, 97);
		res.put(321, 97);
		res.put(322, 219);
		res.put(323, 219);
		res.put(324, 97);
		res.put(325, 97);
		res.put(326, 219);
		res.put(327, 219);
		res.put(328, 219);
		res.put(329, 219);
		res.put(330, 219);
		res.put(331, 219);
		res.put(332, 219);
		res.put(333, 219);
		res.put(334, 219);
		res.put(335, 219);
		res.put(336, 608);
		res.put(337, 608);
		res.put(338, 3879);
		res.put(339, 3879);
		res.put(340, 608);
		res.put(341, 608);
		res.put(342, 3879);
		res.put(343, 3879);
		res.put(344, 3879);
		res.put(345, 3879);
		res.put(346, 3879);
		res.put(347, 3879);
		res.put(348, 3879);
		res.put(349, 3879);
		res.put(350, 3879);
		res.put(351, 3879);
		res.put(352, 34527);
		res.put(353, 34527);
		res.put(354, 48041);
		res.put(355, 48041);
		res.put(356, 34527);
		res.put(357, 34527);
		res.put(358, 48041);
		res.put(359, 48041);
		res.put(360, 34527);
		res.put(361, 34527);
		res.put(362, 120407);
		res.put(363, 120407);
		res.put(364, 34527);
		res.put(365, 34527);
		res.put(366, 120407);
		res.put(367, 120407);
		res.put(368, 245035);
		res.put(369, 245035);
		res.put(370, 697563);
		res.put(371, 697563);
		res.put(372, 245035);
		res.put(373, 245035);
		res.put(374, 697563);
		res.put(375, 697563);
		res.put(376, 245035);
		res.put(377, 245035);
		res.put(378, 2688153);
		res.put(379, 2688153);
		res.put(380, 245035);
		res.put(381, 245035);
		res.put(382, 2688153);
		res.put(383, 2688153);
		res.put(384, 91);
		res.put(385, 91);
		res.put(386, 91);
		res.put(387, 91);
		res.put(388, 91);
		res.put(389, 91);
		res.put(390, 91);
		res.put(391, 91);
		res.put(392, 91);
		res.put(393, 91);
		res.put(394, 91);
		res.put(395, 91);
		res.put(396, 91);
		res.put(397, 91);
		res.put(398, 91);
		res.put(399, 91);
		res.put(400, 1033);
		res.put(401, 1033);
		res.put(402, 6073);
		res.put(403, 6073);
		res.put(404, 1033);
		res.put(405, 1033);
		res.put(406, 6073);
		res.put(407, 6073);
		res.put(408, 4577);
		res.put(409, 4577);
		res.put(410, 6073);
		res.put(411, 6073);
		res.put(412, 4577);
		res.put(413, 4577);
		res.put(414, 6073);
		res.put(415, 6073);
		res.put(416, 1337);
		res.put(417, 1337);
		res.put(418, 1337);
		res.put(419, 1337);
		res.put(420, 1337);
		res.put(421, 1337);
		res.put(422, 1337);
		res.put(423, 1337);
		res.put(424, 29913);
		res.put(425, 29913);
		res.put(426, 120149);
		res.put(427, 120149);
		res.put(428, 29913);
		res.put(429, 29913);
		res.put(430, 120149);
		res.put(431, 120149);
		res.put(432, 71735);
		res.put(433, 71735);
		res.put(434, 613479);
		res.put(435, 613479);
		res.put(436, 71735);
		res.put(437, 71735);
		res.put(438, 613479);
		res.put(439, 613479);
		res.put(440, 218301);
		res.put(441, 218301);
		res.put(442, 711725);
		res.put(443, 711725);
		res.put(444, 218301);
		res.put(445, 218301);
		res.put(446, 711725);
		res.put(447, 711725);
		res.put(448, 1177);
		res.put(449, 1177);
		res.put(450, 1177);
		res.put(451, 1177);
		res.put(452, 1177);
		res.put(453, 1177);
		res.put(454, 1177);
		res.put(455, 1177);
		res.put(456, 1177);
		res.put(457, 1177);
		res.put(458, 1177);
		res.put(459, 1177);
		res.put(460, 1177);
		res.put(461, 1177);
		res.put(462, 1177);
		res.put(463, 1177);
		res.put(464, 9867);
		res.put(465, 9867);
		res.put(466, 28099);
		res.put(467, 28099);
		res.put(468, 9867);
		res.put(469, 9867);
		res.put(470, 28099);
		res.put(471, 28099);
		res.put(472, 28099);
		res.put(473, 28099);
		res.put(474, 28099);
		res.put(475, 28099);
		res.put(476, 28099);
		res.put(477, 28099);
		res.put(478, 28099);
		res.put(479, 28099);
		res.put(480, 48041);
		res.put(481, 48041);
		res.put(482, 48041);
		res.put(483, 48041);
		res.put(484, 48041);
		res.put(485, 48041);
		res.put(486, 48041);
		res.put(487, 48041);
		res.put(488, 246297);
		res.put(489, 246297);
		res.put(490, 346719);
		res.put(491, 346719);
		res.put(492, 246297);
		res.put(493, 246297);
		res.put(494, 346719);
		res.put(495, 346719);
		res.put(496, 2662657);
		res.put(497, 2662657);
		res.put(498, 4817803);
		res.put(499, 4817803);
		res.put(500, 2662657);
		res.put(501, 2662657);
		res.put(502, 4817803);
		res.put(503, 4817803);
		res.put(504, 11814485);
		res.put(505, 11814485);
		res.put(506, 11814485);
		res.put(507, 11814485);
		res.put(508, 11814485);
		res.put(509, 11814485);
		res.put(510, 11814485);
		res.put(511, 11814485);

		Scanner sc = new Scanner(new File(FILE_IN));
		int testCount = Integer.parseInt(sc.nextLine());		
		PrintWriter pw = new PrintWriter(FILE_OUT);
		
		for (int testNum = 1; testNum <= testCount; ++ testNum){
			
			String line = sc.nextLine();
			Scanner nums = new Scanner(line);			
			int mask = 0;
			while (nums.hasNextInt()){
				mask |= (1 << (nums.nextInt() - 2));
			}
			
			pw.println(String.format("Case #%d: %d", testNum, res.get(mask)));
		}
		
		pw.close();
		sc.close();
	}

	private long toBase(long num, long base) {

		long result = 0;
		while (num > 0) {
			result += (num % base) * (num % base);
			num /= base;
		}
		return result;
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {

		new Thread(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					new MultiBaseHappiness().solve();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}).start();
	}
}
